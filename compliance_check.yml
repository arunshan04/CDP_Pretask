---
# compliance_check.yml
# Reads controls from CSV and checks system compliance.

- name: Load and Execute Compliance Checks
  hosts: all
  become: yes
  vars:
    controls_file: "controls.csv"
    compliance_report: []
    csv_delimiter: ","
    cloudera_compliance_report: "/tmp/compliance_report_{{ inventory_hostname }}.json"
    clouderaManagerRepo: "files/cloudera-manager.repo"
    local_config_dir: "./config"
    remote_config_parent: "/tmp/config" 


  tasks:
  - name: Ensure remote parent directory exists
    ansible.builtin.file:
      path: "{{ remote_config_parent }}"
      state: directory
      mode: '0755'

  - name: Synchronize local config directory to remote
    ansible.builtin.synchronize:
      src: "{{ local_config_dir }}/"
      dest: "{{ remote_config_parent }}"
      rsync_opts:
        - "--chmod=Du=rwx,Dg=rx,Do=rx,Fu=rw,Fg=r,Fo=r"   # optional permission normalization
      recursive: yes
      delete: no          # change to yes if you want exact mirror

  - name: Copy controls.csv to remote host
    copy:
      src: controls.csv
      dest: /tmp/controls.csv
    become: false

  - name: Read Controls CSV File
    read_csv:
      path: "/tmp/controls.csv"
      delimiter: "{{ csv_delimiter }}"
    register: controls_csv

  - name: Filter valid (non-comment, non-empty) controls
    set_fact:
      valid_controls: >-
        {{
          controls_csv.list
          | rejectattr('category', 'match', '^#.*')
          | rejectattr('category', 'match', '^$')
          | list
        }}

  - name: Initialize Compliance Report
    set_fact:
      compliance_report: []

  - name: Execute Each Compliance Check
    include_tasks: compliance_check_block.yml
    loop: "{{ valid_controls }}"
    loop_control:
      label: "{{ item.control_id }} - {{ item.description }}"

  - name: Display Compliance Summary
    debug:
      msg: |
        Compliance Check Summary:
        {% for result in compliance_report %}
        [{{ result.status }}] {{ result.control_id }}: {{ result.description }}
        {% endfor %}
      

  - name: Save Compliance Report to JSON File
    copy:
      content: "{{ compliance_report | to_nice_json }}"
      dest: "{{ cloudera_compliance_report }}"
    become: false
    run_once: true


  - name: Print Compliance Summary
    vars:
      total_controls: "{{ compliance_report | length }}"
      compliant_count: "{{ compliance_report | selectattr('status', 'equalto', 'COMPLIANT') | list | length }}"
      non_compliant_count: "{{ compliance_report | selectattr('status', 'equalto', 'NON_COMPLIANT') | list | length }}"
      compliance_score: "{{ (compliant_count | float / (total_controls | float) * 100) | round(2) }}"
    ansible.builtin.debug:
      msg: |
        ==================================================
        üßæ Compliance Results Summary for {{ inventory_hostname }}
        ==================================================

        ‚úÖ Compliant Controls:
        {% for result in compliance_report if result.status == 'COMPLIANT' %}
        [COMPLIANT] {{ result.control_id }}: {{ result.description }}
        {% endfor %}

        ‚ùå Non-Compliant Controls:
        {% for result in compliance_report if result.status == 'NON_COMPLIANT' %}
        [NON_COMPLIANT] {{ result.control_id }}: {{ result.description }}
        But found: {{ result.actual_result | default('N/A') }}
        {% endfor %}

        --------------------------------------------------
        üìä Summary:
        Total Controls: {{ total_controls }}
        Compliant: {{ compliant_count }}
        Non-Compliant: {{ non_compliant_count }}
        Compliance Score: {{ compliance_score }}%
        ==================================================
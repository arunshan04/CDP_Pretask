---
# remediation.yml
# Reads compliance report and fixes auto-remediable issues.

- name: Remediate Non-Compliant Items
  hosts: all
  become: yes
  vars:
    compliance_report_file: "/tmp/compliance_report_{{ inventory_hostname }}.json"

  tasks:
  - name: Load Compliance Report
    slurp:
      src: "{{ compliance_report_file }}"
    register: compliance_report_raw
    delegate_to: localhost
    run_once: true

  - name: Parse Compliance Report JSON
    set_fact:
      compliance_report: "{{ compliance_report_raw.content | b64decode | from_json }}"

  - name: Filter for Non-Compliant and Remediable Items
    set_fact:
      items_to_remediate: >-
        {{ compliance_report | selectattr('status', '!=', 'COMPLIANT') | selectattr('remediable', '==', 'true') | list }}

  - name: Display Items to Remediate
    debug:
      msg: |
        The following items will be remediated:
        {% for item in items_to_remediate %}
        - {{ item.control_id }}: {{ item.description }}
        {% endfor %}

  - name: Remediate Non-Compliant Item
    block:
    - name: Execute Remediation Command for {{ item.control_id }}
      shell: "{{ item.remediation_command }}"
      register: remediation_result

    - name: Verify Remediation for {{ item.control_id }}
      shell: "{{ item.check_command }}"
      register: verify_result
      ignore_errors: yes

    - name: Determine if Remediation Succeeded for {{ item.control_id }}
      set_fact:
        remediation_success: >-
          {% if item.expected_result is defined and item.expected_result | length > 0 %}
            {{ (verify_result.stdout | trim == item.expected_result) }}
          {% else %}
            {{ (verify_result.rc == 0) }}
          {% endif %}

    - name: Report Remediation Outcome for {{ item.control_id }}
      debug:
        msg: "Remediation for {{ item.control_id }} {% if remediation_success %}SUCCEEDED{% else %}FAILED{% endif %}"

    loop: "{{ items_to_remediate }}"
    loop_control:
      label: "{{ item.control_id }} - {{ item.description }}"
    when: items_to_remediate | length > 0

  - name: Generate Final Remediation Summary
    debug:
      msg: |
        Remediation Summary:
        {% for item in items_to_remediate %}
        [{{ (item.remediation_success | default(false)) | ternary('FIXED', 'FAILED') }}] {{ item.control_id }}: {{ item.description }}
        {% endfor %}
    when: items_to_remediate | length > 0
